// Three.js minimal stub
window.THREE = {
    Object3D: class {},
    Scene: class { 
        add() {} 
        remove() {}
    },
    PerspectiveCamera: class {
        lookAt() {}
    },
    WebGLRenderer: class { 
        constructor() { 
            return { 
                domElement: document.createElement('canvas'),
                shadowMap: {}
            }; 
        }
        setSize() {}
        setClearColor() {}
        setPixelRatio() {}
        render() {}
    },
    Vector3: class {
        copy() {}
        set() {}
    },
    Box3: class {},
    Sphere: class {},
    SphereGeometry: class {},
    PlaneGeometry: class {},
    BoxGeometry: class {},
    MeshStandardMaterial: class {},
    MeshBasicMaterial: class {},
    Mesh: class {
        constructor() {
            return {
                position: { copy: () => {}, set: () => {} },
                scale: { set: () => {} },
                rotation: { set: () => {} },
                castShadow: false,
                receiveShadow: false
            };
        }
    },
    Group: class {
        add() {}
    },
    Color: function(color) {
        this.setHex = () => {};
        return this;
    },
    AmbientLight: class {},
    DirectionalLight: class {
        constructor() {
            return {
                position: { set: () => {} },
                shadow: {
                    camera: {},
                    mapSize: {}
                }
            };
        }
    },
    PCFSoftShadowMap: 1,
    TextureLoader: class {
        load() { return {}; }
    },
    CanvasTexture: class {},
    SpriteMaterial: class {},
    Sprite: class {
        constructor() {
            return {
                position: { set: () => {} },
                scale: { set: () => {} }
            };
        }
    },
    WebGLRenderingContext: true
}; 